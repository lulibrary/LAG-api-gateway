service: lag-api

provider:
  name: aws
  runtime: nodejs6.10
  region: ${opt:region}
  stage: ${opt:stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource:
        - ${self:custom.TableArns.${opt:stage}.usersTable}
    - Effect: Allow
      Action:
        - sqs:SendMessage
        - sqs:GetQueueURL
        - sqs:ReceiveMessage
        - sqs:DeleteMessage
      Resource:
        - ${self:custom.QueueArns.${opt:stage}.usersQueue}
    - Effect: Allow
      Action:
        -ssm:GetParameter
      Resource:
        - ${env:ALMA_API_KEY_ARN}

functions:
  userHandler:
    handler: user/get-user.handle
    events:
      - http:
          method: get
          path: users/{userID}
          request:
            parameters:
              paths:
                id: true
    environment:
      ALMA_API_KEY_NAME: ${env:ALMA_API_KEY_NAME}
      USER_CACHE_TABLE_NAME: ${self:custom.TableNames.${opt:stage}.usersTable}
      USERS_QUEUE_URL: ${self:custom.QueueUrls.${opt:stage}.usersQueue}

custom:
  TableNames:
    stg:
      usersTable: ${env:USER_TABLE_NAME_STG}
    prod:
      usersTable: ${env:USER_TABLE_NAME_PROD}

  TableArns:
    stg:
      usersTable: ${env:USER_TABLE_ARN_STG}
    prod:
      usersTable: ${env:USER_TABLE_ARN_PROD}
  
  QueueUrls:
    stg:
      usersQueue: ${env:USER_QUEUE_URL_STG}
    prod:
      usersQueue: ${env:USER_QUEUE_URL_PROD}

  QueueArns:
    stg:
      usersQueue: ${env:USER_QUEUE_ARN_STG}
    prod:
      usersQueue: ${env:USER_QUEUE_ARN_PROD}
